}
if(line == "gam") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = gam_fit))
}
if(is.null(dim(peaks_data)) | dim(peaks_data)[[1]] == 0  | dim(peak_info)[[1]] == 0){
peak_info <- NULL
print("peak_info == NULL")
print(dim(peak_info)[[1]])
}
if(show_peak == TRUE & is.null(peak_info) == FALSE){
colors <- c("#FF0000", "#000000", "#009900", "#6600CC", "#00FFFF", "#FF66FF", "#999999", "#003333" )
#sub_colors <- colors[1:length(peak_info$Max_peak_frame)]
q <- q +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info$Max_peak_smooth_z[[x]]), group = x, colour = colors[[x]],size = 2))
p <- p +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info[peak_info$Max_peak_frame == peak_info$Max_peak_frame[[x]]][[var]]), size = 2, group = x, colour = colors[[x]]))
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
print(peak_info)
if(show_peak == TRUE & is.null(peak_info)){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
if(show_peak == FALSE){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
return(final)
}
launch_GuiGui()
#' @param peaks_data
#' @param cell
#' @param var
#' @param line
#' @param show_peak
#'
#' @return
#' @export
#'
#' @examples
cell_plot <- function(full_data, peaks_data, cell, var, line = c(FALSE, "poly", "gam"), show_peak = FALSE) {
df <- full_data[full_data$Cell_id == cell,]
print(peaks_data)
if(is.null(dim(peaks_data)) == FALSE | dim(peaks_data)[[1]] != 0 | peaks_data != "No Peak" ){
peak_info <- peaks_data[peaks_data$Cell_id == cell]
print("peaks_data not null")
print(peak_info)
}
print(df)
p <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = !!rlang::sym(var)))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
q <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = smooth_z))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
print("p and q ok")
if(line == FALSE) {
}
if(line == "poly") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = poly_fit))
}
if(line == "gam") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = gam_fit))
}
if(is.null(dim(peaks_data)) | dim(peaks_data)[[1]] == 0  | dim(peak_info)[[1]] == 0){
peak_info <- NULL
print("peak_info == NULL")
print(dim(peak_info)[[1]])
}
if(show_peak == TRUE & is.null(peak_info) == FALSE){
colors <- c("#FF0000", "#000000", "#009900", "#6600CC", "#00FFFF", "#FF66FF", "#999999", "#003333" )
#sub_colors <- colors[1:length(peak_info$Max_peak_frame)]
q <- q +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info$Max_peak_smooth_z[[x]]), group = x, colour = colors[[x]],size = 2))
p <- p +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info[peak_info$Max_peak_frame == peak_info$Max_peak_frame[[x]]][[var]]), size = 2, group = x, colour = colors[[x]]))
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
print(peak_info)
if(show_peak == TRUE & is.null(peak_info)){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
if(show_peak == FALSE){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
return(final)
}
launch_GuiGui()
x <- NULL
x
x[[1]]
#' @param deconvolve_var
#' @param borders_range
#' @param time_thresh
#' @param frame_rate
#' @param compare_groups
#'
#' @return
#' @export
#'
#' @examples
downstream_analysis <- function(data, moving_thresh = 0.1, outlier_thresh = 2, mean_width = 10, DPA_width = 10,
mean_width_diff = 10, method = "gam", norm_var = "gam",
norm_width = 10, lambda = 100,
gam = 0.97, constraint = T, threshold = 3,
deconvolve_var = "gam_detrended", borders_range = 50,
time_thresh = 1, compare_groups = FALSE, false_pos = c(TRUE, FALSE)) {
lambda <- as.numeric(lambda)
print(lambda)
gam <- as.numeric(gam)
print(gam)
threshold <- as.numeric(threshold)
print(threshold)
borders_range <- as.integer(borders_range)
print(borders_range)
clean <- clean_data(data, moving_thresh, outlier_thresh, mean_width, DPA_width, mean_width_diff)
print("cleaning = OK")
back <- backEstimate(clean, method = method)
print("back = OK")
norm <- norm_df(back, var = norm_var, width = norm_width)
print("norm = OK")
print(norm)
deconvolved <- deconvolve(norm, lambda = lambda, gam = gam, constraint = constraint,
threshold = threshold, var = deconvolve_var)
print("deconvolved = ok")
print(deconvolved[[1]]$Cell_id)
if(length(deconvolved[[1]]$Cell_id) == 0){
borders <- NULL
print(borders)
}
if(length(deconvolved[[1]]$Cell_id) != 0){
if(false_pos == TRUE){
best <- keep_best_peaks(deconvolved)
print("best = ok")
if(length(best[[1]]$Cell_id) == 0 ){
borders <- NULL
}
else{
borders <- find_borders(best, range = borders_range)
}
}
if(false_pos == FALSE){
borders <- find_borders(deconvolved, range = borders_range)
}
}
return(list(borders[[1]], norm))
}
dim(x)
#' @param peaks_data
#' @param cell
#' @param var
#' @param line
#' @param show_peak
#'
#' @return
#' @export
#'
#' @examples
cell_plot <- function(full_data, peaks_data, cell, var, line = c(FALSE, "poly", "gam"), show_peak = FALSE) {
df <- full_data[full_data$Cell_id == cell,]
print(peaks_data)
if(is.null(dim(peaks_data)) == FALSE | dim(peaks_data)[[1]] != 0){
peak_info <- peaks_data[peaks_data$Cell_id == cell]
print("peaks_data not null")
print(peak_info)
}
print(df)
p <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = !!rlang::sym(var)))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
q <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = smooth_z))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
print("p and q ok")
if(line == FALSE) {
}
if(line == "poly") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = poly_fit))
}
if(line == "gam") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = gam_fit))
}
if(is.null(dim(peaks_data)) | dim(peaks_data)[[1]] == 0  | dim(peak_info)[[1]] == 0){
peak_info <- NULL
print("peak_info == NULL")
print(dim(peak_info)[[1]])
}
if(show_peak == TRUE & is.null(peak_info) == FALSE){
colors <- c("#FF0000", "#000000", "#009900", "#6600CC", "#00FFFF", "#FF66FF", "#999999", "#003333" )
#sub_colors <- colors[1:length(peak_info$Max_peak_frame)]
q <- q +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info$Max_peak_smooth_z[[x]]), group = x, colour = colors[[x]],size = 2))
p <- p +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info[peak_info$Max_peak_frame == peak_info$Max_peak_frame[[x]]][[var]]), size = 2, group = x, colour = colors[[x]]))
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
print(peak_info)
if(show_peak == TRUE & is.null(peak_info)){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
if(show_peak == FALSE){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
return(final)
}
launch_GuiGui()
is.null(dim(x))
is.null(dim(x)) == FALSE
dim(x)[[1]]
dim(x)[[1]] != 0
#' @param peaks_data
#' @param cell
#' @param var
#' @param line
#' @param show_peak
#'
#' @return
#' @export
#'
#' @examples
cell_plot <- function(full_data, peaks_data, cell, var, line = c(FALSE, "poly", "gam"), show_peak = FALSE) {
df <- full_data[full_data$Cell_id == cell,]
print(peaks_data)
if(is.null(peaks_data) == FALSE) {
if(is.null(dim(peaks_data)) == FALSE | dim(peaks_data)[[1]] != 0){
peak_info <- peaks_data[peaks_data$Cell_id == cell]
print("peaks_data not null")
print(peak_info)
}
}
print(df)
p <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = !!rlang::sym(var)))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
q <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = smooth_z))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
print("p and q ok")
if(line == FALSE) {
}
if(line == "poly") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = poly_fit))
}
if(line == "gam") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = gam_fit))
}
if(is.null(dim(peaks_data)) | dim(peaks_data)[[1]] == 0  | dim(peak_info)[[1]] == 0){
peak_info <- NULL
print("peak_info == NULL")
print(dim(peak_info)[[1]])
}
if(show_peak == TRUE & is.null(peak_info) == FALSE){
colors <- c("#FF0000", "#000000", "#009900", "#6600CC", "#00FFFF", "#FF66FF", "#999999", "#003333" )
#sub_colors <- colors[1:length(peak_info$Max_peak_frame)]
q <- q +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info$Max_peak_smooth_z[[x]]), group = x, colour = colors[[x]],size = 2))
p <- p +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info[peak_info$Max_peak_frame == peak_info$Max_peak_frame[[x]]][[var]]), size = 2, group = x, colour = colors[[x]]))
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
print(peak_info)
if(show_peak == TRUE & is.null(peak_info)){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
if(show_peak == FALSE){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
return(final)
}
dim(x)[[1]] != 0
launch_GuiGui()
dim(peaks_data)[[1]]
dim(x)[[1]]
#' @param peaks_data
#' @param cell
#' @param var
#' @param line
#' @param show_peak
#'
#' @return
#' @export
#'
#' @examples
cell_plot <- function(full_data, peaks_data, cell, var, line = c(FALSE, "poly", "gam"), show_peak = FALSE) {
df <- full_data[full_data$Cell_id == cell,]
print(peaks_data)
if(is.null(peaks_data) == FALSE) {
if(is.null(dim(peaks_data)) == FALSE | dim(peaks_data)[[1]] != 0){
peak_info <- peaks_data[peaks_data$Cell_id == cell]
print("peaks_data not null")
print(peak_info)
}
}
else{
peak_info <- NULL
}
print(df)
p <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = !!rlang::sym(var)))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
q <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = smooth_z))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
print("p and q ok")
if(line == FALSE) {
}
if(line == "poly") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = poly_fit))
}
if(line == "gam") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = gam_fit))
}
if(is.null(dim(peaks_data)) | dim(peaks_data)[[1]] == 0  | dim(peak_info)[[1]] == 0 | is.null(peak_info)){
peak_info <- NULL
print("peak_info == NULL")
print(dim(peak_info)[[1]])
}
if(show_peak == TRUE & is.null(peak_info) == FALSE){
colors <- c("#FF0000", "#000000", "#009900", "#6600CC", "#00FFFF", "#FF66FF", "#999999", "#003333" )
#sub_colors <- colors[1:length(peak_info$Max_peak_frame)]
q <- q +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info$Max_peak_smooth_z[[x]]), group = x, colour = colors[[x]],size = 2))
p <- p +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info[peak_info$Max_peak_frame == peak_info$Max_peak_frame[[x]]][[var]]), size = 2, group = x, colour = colors[[x]]))
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
print(peak_info)
if(show_peak == TRUE & is.null(peak_info)){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
if(show_peak == FALSE){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
return(final)
}
launch_GuiGui()
#' @param peaks_data
#' @param cell
#' @param var
#' @param line
#' @param show_peak
#'
#' @return
#' @export
#'
#' @examples
cell_plot <- function(full_data, peaks_data, cell, var, line = c(FALSE, "poly", "gam"), show_peak = FALSE) {
df <- full_data[full_data$Cell_id == cell,]
print(peaks_data)
if(is.null(peaks_data) == FALSE) {
if(is.null(dim(peaks_data)) == FALSE | dim(peaks_data)[[1]] != 0){
peak_info <- peaks_data[peaks_data$Cell_id == cell]
print("peaks_data not null")
print(peak_info)
}
}
else{
peak_info <- NULL
}
print(df)
p <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = !!rlang::sym(var)))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
q <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = smooth_z))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
print("p and q ok")
if(line == FALSE) {
}
if(line == "poly") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = poly_fit))
}
if(line == "gam") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = gam_fit))
}
if(is.null(peak_info) == FALSE) {
if(dim(peak_info)[[1]] == 0){
peak_info <- NULL
print("peak_info == NULL")
print(dim(peak_info)[[1]])
}
}
if(show_peak == TRUE & is.null(peak_info) == FALSE){
colors <- c("#FF0000", "#000000", "#009900", "#6600CC", "#00FFFF", "#FF66FF", "#999999", "#003333" )
#sub_colors <- colors[1:length(peak_info$Max_peak_frame)]
q <- q +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info$Max_peak_smooth_z[[x]]), group = x, colour = colors[[x]],size = 2))
p <- p +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info[peak_info$Max_peak_frame == peak_info$Max_peak_frame[[x]]][[var]]), size = 2, group = x, colour = colors[[x]]))
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
print(peak_info)
if(show_peak == TRUE & is.null(peak_info)){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
if(show_peak == FALSE){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
return(final)
}
launch_GuiGui()
#' @param peaks_data
#' @param cell
#' @param var
#' @param line
#' @param show_peak
#'
#' @return
#' @export
#'
#' @examples
cell_plot <- function(full_data, peaks_data, cell, var, line = c(FALSE, "poly", "gam"), show_peak = FALSE) {
df <- full_data[full_data$Cell_id == cell,]
print(peaks_data)
if(is.null(peaks_data) == FALSE) {
if(is.null(dim(peaks_data)) == FALSE | dim(peaks_data)[[1]] != 0){
peak_info <- peaks_data[peaks_data$Cell_id == cell]
}
}
else{
peak_info <- NULL
}
p <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = !!rlang::sym(var)))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
q <- ggplot2::ggplot(df, ggplot2::aes(x = time_frame, y = smooth_z))+
ggplot2::geom_line( ggplot2::aes( color =stimulus),size = 1)+
#geom_point(data = peak,size = 2)+
ggplot2::facet_wrap(~df$Cell_id) +
ggplot2::theme_classic()
if(line == FALSE) {
}
if(line == "poly") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = poly_fit))
}
if(line == "gam") {
p <- p + ggplot2::geom_line( ggplot2::aes(y = gam_fit))
}
if(is.null(peak_info) == FALSE) {
if(dim(peak_info)[[1]] == 0){
peak_info <- NULL
print("peak_info == NULL")
print(dim(peak_info)[[1]])
}
}
if(show_peak == TRUE & is.null(peak_info) == FALSE){
colors <- c("#FF0000", "#000000", "#009900", "#6600CC", "#00FFFF", "#FF66FF", "#999999", "#003333" )
#sub_colors <- colors[1:length(peak_info$Max_peak_frame)]
q <- q +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info$Max_peak_smooth_z[[x]]), group = x, colour = colors[[x]],size = 2))
p <- p +
sapply(seq_along(1:length(peak_info$Start_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$Start_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$End_peak_frame)), function(x) ggplot2::geom_vline(ggplot2::aes(xintercept = peak_info$End_peak_frame[[x]]), size = 1, group = x, colour = colors[[x]]))+
sapply(seq_along(1:length(peak_info$Max_peak_frame)), function(x) ggplot2::geom_point(ggplot2::aes(x = peak_info$Max_peak_frame[[x]], y = peak_info[peak_info$Max_peak_frame == peak_info$Max_peak_frame[[x]]][[var]]), size = 2, group = x, colour = colors[[x]]))
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
print(peak_info)
if(show_peak == TRUE & is.null(peak_info)){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
if(show_peak == FALSE){
final <- gridExtra::grid.arrange(p,q, ncol = 2)
}
return(final)
}
library(CalQuick)
